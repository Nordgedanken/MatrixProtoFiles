// Code generated by protoc-gen-go. DO NOT EDIT.
// source: federation/server.proto

/*
Package matrixProtos_Server is a generated protocol buffer package.

It is generated from these files:
	federation/server.proto

It has these top-level messages:
	VersionRequest
	VersionsResponse
	Version
	KeyRequest
	KeyResponse
	OldVerifyKey
	Signature
	TlsFingerprint
	VerifyKey
*/
package matrixProtos_Server

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VersionRequest struct {
}

func (m *VersionRequest) Reset()                    { *m = VersionRequest{} }
func (m *VersionRequest) String() string            { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()               {}
func (*VersionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type VersionsResponse struct {
	Versions []*Version `protobuf:"bytes,1,rep,name=versions" json:"versions,omitempty"`
}

func (m *VersionsResponse) Reset()                    { *m = VersionsResponse{} }
func (m *VersionsResponse) String() string            { return proto.CompactTextString(m) }
func (*VersionsResponse) ProtoMessage()               {}
func (*VersionsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VersionsResponse) GetVersions() []*Version {
	if m != nil {
		return m.Versions
	}
	return nil
}

type Version struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
}

func (m *Version) Reset()                    { *m = Version{} }
func (m *Version) String() string            { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()               {}
func (*Version) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Version) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Version) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type KeyRequest struct {
}

func (m *KeyRequest) Reset()                    { *m = KeyRequest{} }
func (m *KeyRequest) String() string            { return proto.CompactTextString(m) }
func (*KeyRequest) ProtoMessage()               {}
func (*KeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type KeyResponse struct {
	OldVerifyKeys   []*OldVerifyKey   `protobuf:"bytes,1,rep,name=old_verify_keys,json=oldVerifyKeys" json:"old_verify_keys,omitempty"`
	ServerName      string            `protobuf:"bytes,2,opt,name=server_name,json=serverName" json:"server_name,omitempty"`
	Signatures      []*Signature      `protobuf:"bytes,3,rep,name=signatures" json:"signatures,omitempty"`
	TlsFingerprints []*TlsFingerprint `protobuf:"bytes,4,rep,name=tls_fingerprints,json=tlsFingerprints" json:"tls_fingerprints,omitempty"`
	ValidUntilTs    int64             `protobuf:"varint,5,opt,name=valid_until_ts,json=validUntilTs" json:"valid_until_ts,omitempty"`
	VerifyKeys      []*VerifyKey      `protobuf:"bytes,6,rep,name=verify_keys,json=verifyKeys" json:"verify_keys,omitempty"`
}

func (m *KeyResponse) Reset()                    { *m = KeyResponse{} }
func (m *KeyResponse) String() string            { return proto.CompactTextString(m) }
func (*KeyResponse) ProtoMessage()               {}
func (*KeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *KeyResponse) GetOldVerifyKeys() []*OldVerifyKey {
	if m != nil {
		return m.OldVerifyKeys
	}
	return nil
}

func (m *KeyResponse) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *KeyResponse) GetSignatures() []*Signature {
	if m != nil {
		return m.Signatures
	}
	return nil
}

func (m *KeyResponse) GetTlsFingerprints() []*TlsFingerprint {
	if m != nil {
		return m.TlsFingerprints
	}
	return nil
}

func (m *KeyResponse) GetValidUntilTs() int64 {
	if m != nil {
		return m.ValidUntilTs
	}
	return 0
}

func (m *KeyResponse) GetVerifyKeys() []*VerifyKey {
	if m != nil {
		return m.VerifyKeys
	}
	return nil
}

type OldVerifyKey struct {
	Type      string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	ExpiredTS int64  `protobuf:"varint,2,opt,name=expiredTS" json:"expiredTS,omitempty"`
	Key       string `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
}

func (m *OldVerifyKey) Reset()                    { *m = OldVerifyKey{} }
func (m *OldVerifyKey) String() string            { return proto.CompactTextString(m) }
func (*OldVerifyKey) ProtoMessage()               {}
func (*OldVerifyKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *OldVerifyKey) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OldVerifyKey) GetExpiredTS() int64 {
	if m != nil {
		return m.ExpiredTS
	}
	return 0
}

func (m *OldVerifyKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type Signature struct {
	ServerName string `protobuf:"bytes,1,opt,name=server_name,json=serverName" json:"server_name,omitempty"`
	Type       string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Signature  string `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
}

func (m *Signature) Reset()                    { *m = Signature{} }
func (m *Signature) String() string            { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()               {}
func (*Signature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Signature) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *Signature) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Signature) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type TlsFingerprint struct {
	Sha256 string `protobuf:"bytes,1,opt,name=sha256" json:"sha256,omitempty"`
}

func (m *TlsFingerprint) Reset()                    { *m = TlsFingerprint{} }
func (m *TlsFingerprint) String() string            { return proto.CompactTextString(m) }
func (*TlsFingerprint) ProtoMessage()               {}
func (*TlsFingerprint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *TlsFingerprint) GetSha256() string {
	if m != nil {
		return m.Sha256
	}
	return ""
}

type VerifyKey struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Key  string `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
}

func (m *VerifyKey) Reset()                    { *m = VerifyKey{} }
func (m *VerifyKey) String() string            { return proto.CompactTextString(m) }
func (*VerifyKey) ProtoMessage()               {}
func (*VerifyKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *VerifyKey) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *VerifyKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func init() {
	proto.RegisterType((*VersionRequest)(nil), "matrixProtos_Server.VersionRequest")
	proto.RegisterType((*VersionsResponse)(nil), "matrixProtos_Server.VersionsResponse")
	proto.RegisterType((*Version)(nil), "matrixProtos_Server.Version")
	proto.RegisterType((*KeyRequest)(nil), "matrixProtos_Server.KeyRequest")
	proto.RegisterType((*KeyResponse)(nil), "matrixProtos_Server.KeyResponse")
	proto.RegisterType((*OldVerifyKey)(nil), "matrixProtos_Server.OldVerifyKey")
	proto.RegisterType((*Signature)(nil), "matrixProtos_Server.Signature")
	proto.RegisterType((*TlsFingerprint)(nil), "matrixProtos_Server.TlsFingerprint")
	proto.RegisterType((*VerifyKey)(nil), "matrixProtos_Server.VerifyKey")
}

func init() { proto.RegisterFile("federation/server.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 463 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x95, 0xe3, 0x90, 0x36, 0x93, 0x90, 0x86, 0x45, 0x02, 0xab, 0xaa, 0x20, 0xb8, 0x20, 0xe5,
	0x14, 0x44, 0x10, 0x1f, 0x27, 0xb8, 0x55, 0x42, 0xa0, 0x82, 0x9c, 0x90, 0x23, 0x96, 0xc1, 0x93,
	0xb2, 0xaa, 0x6b, 0x9b, 0x9d, 0x8d, 0x55, 0xff, 0x31, 0x7e, 0x17, 0x3f, 0x01, 0xed, 0x7a, 0xfd,
	0x11, 0x62, 0x7c, 0xdb, 0x79, 0x7e, 0xfb, 0xe6, 0xf9, 0xed, 0x0c, 0x3c, 0xdc, 0x62, 0x88, 0x22,
	0x90, 0x3c, 0x89, 0x9f, 0x13, 0x8a, 0x0c, 0xc5, 0x22, 0x15, 0x89, 0x4c, 0xd8, 0xfd, 0x9b, 0x40,
	0x0a, 0x7e, 0xfb, 0x45, 0x15, 0xe4, 0xaf, 0xf4, 0x27, 0x77, 0x0a, 0x93, 0x0d, 0x0a, 0xe2, 0x49,
	0xec, 0xe1, 0xaf, 0x1d, 0x92, 0x74, 0x3f, 0xc1, 0xd4, 0x20, 0xe4, 0x21, 0xa5, 0x49, 0x4c, 0xc8,
	0xde, 0xc2, 0x71, 0x66, 0x30, 0xc7, 0x9a, 0xd9, 0xf3, 0xd1, 0xf2, 0x6c, 0xd1, 0xa2, 0xb6, 0x28,
	0xa5, 0x2a, 0xb6, 0xfb, 0x06, 0x8e, 0x0c, 0xc8, 0x18, 0xf4, 0xe3, 0xe0, 0x06, 0x1d, 0x6b, 0x66,
	0xcd, 0x87, 0x9e, 0x3e, 0x33, 0x07, 0x8e, 0x0c, 0xd5, 0xe9, 0x69, 0xb8, 0x2c, 0xdd, 0x31, 0xc0,
	0x47, 0xcc, 0x4b, 0x53, 0x7f, 0x7a, 0x30, 0xd2, 0xa5, 0x31, 0xf4, 0x01, 0x4e, 0x92, 0x28, 0xf4,
	0x33, 0x14, 0x7c, 0x9b, 0xfb, 0xd7, 0x98, 0x97, 0xbe, 0x9e, 0xb4, 0xfa, 0xfa, 0x1c, 0x85, 0x1b,
	0x4d, 0x55, 0x1a, 0x77, 0x93, 0x46, 0x45, 0xec, 0x31, 0x8c, 0x8a, 0x98, 0x7c, 0xed, 0xae, 0xb0,
	0x01, 0x05, 0x74, 0xa9, 0x3c, 0xbe, 0x03, 0x20, 0x7e, 0x15, 0x07, 0x72, 0x27, 0x90, 0x1c, 0x5b,
	0xb7, 0x79, 0xd4, 0xda, 0x66, 0x55, 0xd2, 0xbc, 0xc6, 0x0d, 0x76, 0x09, 0x53, 0x19, 0x91, 0xbf,
	0xe5, 0xf1, 0x15, 0x8a, 0x54, 0xf0, 0x58, 0x92, 0xd3, 0xd7, 0x2a, 0xe7, 0xad, 0x2a, 0xeb, 0x88,
	0x2e, 0x6a, 0xae, 0x77, 0x22, 0xf7, 0x6a, 0x62, 0x4f, 0x61, 0x92, 0x05, 0x11, 0x0f, 0xfd, 0x5d,
	0x2c, 0x79, 0xe4, 0x4b, 0x72, 0xee, 0xcc, 0xac, 0xb9, 0xed, 0x8d, 0x35, 0xfa, 0x55, 0x81, 0x6b,
	0x62, 0xef, 0x61, 0xd4, 0x4c, 0x67, 0xd0, 0x61, 0xbb, 0x8e, 0x06, 0xb2, 0x2a, 0x17, 0xd7, 0x83,
	0x71, 0x33, 0x36, 0xf5, 0x7c, 0x32, 0x4f, 0xab, 0xe7, 0x53, 0x67, 0x76, 0x06, 0x43, 0xbc, 0x4d,
	0xb9, 0xc0, 0x70, 0xbd, 0xd2, 0xc9, 0xd9, 0x5e, 0x0d, 0xb0, 0x29, 0xd8, 0xd7, 0x98, 0x3b, 0xb6,
	0xbe, 0xa0, 0x8e, 0xee, 0x37, 0x18, 0x56, 0x19, 0xfd, 0x1b, 0xbc, 0x75, 0x10, 0x7c, 0xd9, 0xb1,
	0xb7, 0xdf, 0xb1, 0x8a, 0xd6, 0x28, 0xd7, 0x80, 0x3b, 0x87, 0xc9, 0x7e, 0x7a, 0xec, 0x01, 0x0c,
	0xe8, 0x67, 0xb0, 0x7c, 0xf5, 0xda, 0xe8, 0x9b, 0xca, 0x7d, 0x01, 0xc3, 0xee, 0x5f, 0x3b, 0x30,
	0xbf, 0xfc, 0x6d, 0xc1, 0xbd, 0x8b, 0x6a, 0xb7, 0x54, 0x76, 0xfc, 0x07, 0xb2, 0x0d, 0x1c, 0x97,
	0xeb, 0xc2, 0xce, 0x3b, 0x97, 0xa2, 0x18, 0xe5, 0xd3, 0x67, 0x5d, 0x24, 0x6a, 0x4c, 0x78, 0xbf,
	0x18, 0xcf, 0x56, 0x7a, 0xbd, 0x1a, 0xa7, 0xb3, 0xff, 0x13, 0x0a, 0xa9, 0xef, 0x03, 0xbd, 0xff,
	0x2f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xe2, 0xf4, 0x73, 0x23, 0x1a, 0x04, 0x00, 0x00,
}
